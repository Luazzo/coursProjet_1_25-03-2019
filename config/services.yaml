# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

    app.path.works: /uploads/images/works
    app.path.blogs: /uploads/images/blogs


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones




    app.event_listener.registration_listener:
        class: App\EventListener\RegistrationListener
        arguments:
            - $ent: '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: kernel.event_subscriber, event: prePersist }



    app.controller.registration_controller:
        class: App\Controller\RegistrationController
        arguments:
           # $dispatcher: '@event_dispatcher'
            #$formFactory: '@fos_user.registration.form.factory'
           # $userManager: '@fos_user.user_manager'
           # $tokenStorage: 'security.token_storage'
        calls:
            - method: setContainer
              arguments:
                  - '@service_container'
        public: true


    app.subscriber.user_registered_subscriber:
        class: App\Subscriber\UserRegisteredSubscriber
        arguments: []
        tags:
            - { name: kernel.event_subscriber }

    #fos.user.form.factory.fatory_interface:
    #    class: FOS\UserBundle\Form\Factory\FactoryInterface
     #   alias: 'fos_user.registration.form.factory'
     #   public: true